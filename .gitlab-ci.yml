include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

image: golang:1.14

variables:
  DOCKER_REPOSITORY: mendersoftware/mender-cli
  REPO_NAME: github.com/mendersoftware/mender-cli
  GITHUB_RELEASE_BINARY: mender-cli
  S3_BUCKET_NAME: "mender"
  S3_BUCKET_PATH: "mender-cli"
  BUILD_DIR: build

before_script:
  - mkdir -p /go/src/$(dirname $REPO_NAME)/mender-cli /go/src/_/builds
  - cp -r $CI_PROJECT_DIR /go/src/$(dirname $REPO_NAME)
  - cd /go/src/$(dirname $REPO_NAME)/mender-cli
  - apt-get update && apt-get install -yyq liblzma-dev

stages:
  - test_prep
  - test
  - build
  - publish

test:build_acceptance:tools:
  image: golang:1.14
  stage: test_prep
  script:
    - go build -o $CI_PROJECT_DIR/mender-cli
    - chmod +x $CI_PROJECT_DIR/mender-cli
    - wget -q -O $CI_PROJECT_DIR/mender-artifact https://d1b0l86ne08fsf.cloudfront.net/mender-artifact/master/mender-artifact
    - chmod +x $CI_PROJECT_DIR/mender-artifact
  artifacts:
    untracked: true
    paths:
      - mender-cli
      - mender-artifact

test:build_acceptance:image:
  stage: test_prep
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - docker build -t testing -f tests/Dockerfile .
    - docker save testing > $CI_PROJECT_DIR/acceptance_testing_image.tar
  artifacts:
    expire_in: 2w
    paths:
      - acceptance_testing_image.tar

test:checks:
  stage: test_prep
  script:
    - apt-get -qq update && apt-get -qqy install --allow-unauthenticated e2tools
    # Install code coverage tooling
    - GO111MODULE=off go get -u github.com/axw/gocov/gocov
    - GO111MODULE=off go get -u golang.org/x/tools/cmd/cover
    - make get-tools
    - make check

test:acceptance:
  stage: test
  image: tiangolo/docker-with-compose
  dependencies:
    - test:build_acceptance:tools
    - test:build_acceptance:image
  services:
    - docker:19.03.5-dind
  script:
    - apk add git bash
    - docker load -i acceptance_testing_image.tar
    - export SHARED_PATH="$(dirname ${CI_PROJECT_DIR})/shared"
    - mkdir -p ${SHARED_PATH} && mv mender-artifact mender-cli tests/* ${SHARED_PATH}
    - git clone -b master https://github.com/mendersoftware/integration.git ${SHARED_PATH}/integration
    # this is basically https://github.com/mendersoftware/integration/blob/master/tests/run.sh#L51
    # to allow the tests to be run, as the composition is now generated during test image build
    - sed -e '/9000:9000/d' -e '/8080:8080/d' -e '/443:443/d' -e '/ports:/d' ${SHARED_PATH}/integration/docker-compose.demo.yml > ${SHARED_PATH}/integration/docker-compose.testing.yml
    - sed -e 's/DOWNLOAD_SPEED/#DOWNLOAD_SPEED/' -i ${SHARED_PATH}/integration/docker-compose.testing.yml
    - sed -e 's/ALLOWED_HOSTS:\ .*/ALLOWED_HOSTS:\ _/' -i ${SHARED_PATH}/integration/docker-compose.testing.yml
    - TESTS_DIR=${SHARED_PATH} ${SHARED_PATH}/integration/extra/travis-testing/run-test-environment acceptance ${SHARED_PATH}/integration ${SHARED_PATH}/docker-compose.acceptance.yml ;
  tags:
    - docker

compile:
  image: golang:1.14
  stage: build
  script:
    - make build-multiplatform
    - cp /go/src/$(dirname $REPO_NAME)/mender-cli/mender-cli.linux.amd64 $CI_PROJECT_DIR/
    - cp /go/src/$(dirname $REPO_NAME)/mender-cli/mender-cli.darwin.amd64 $CI_PROJECT_DIR/
  artifacts:
    paths:
      - mender-cli.linux.amd64
      - mender-cli.darwin.amd64

publish:s3:
  stage: publish
  image: debian:buster
  dependencies:
    - compile
  before_script:
    - apt update && apt install -yyq awscli
  script:
    - echo "Publishing ${CI_COMMIT_REF_NAME} version for linux to S3"
    - aws s3 cp $GITHUB_RELEASE_BINARY.linux.amd64
        s3://$S3_BUCKET_NAME/$S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/linux/mender-cli
    - aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
        --key $S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/linux/mender-cli
    - echo "Publishing ${CI_COMMIT_REF_NAME} version for darwin to S3"
    - aws s3 cp $GITHUB_RELEASE_BINARY.darwin.amd64
        s3://$S3_BUCKET_NAME/$S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/darwin/mender-cli
    - aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
        --key $S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/darwin/mender-cli
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
